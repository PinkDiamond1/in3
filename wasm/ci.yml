# This template should be used for jobs to run during deployment only
.only_deploy:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+.[0-9]+.[0-9]+(\-RC[0-9]+)?$/'
      when: manual

.cache_setup:
  # Caches per branch - per job
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - .npm/

wasm_index:
  image: docker.slock.it/build-images/cmake:clang11
  needs: []
  stage: build
  tags:
    - long-jobs
  script:
    - cd scripts
    - ./build_multi_wasm.sh --index
  artifacts:
    paths:
      - in3_index


test_wasm:
  coverage: '/Lines.*:\s+(\d+.\d+\%)/'
  image: docker.slock.it/build-images/node:10-alpine
  needs:
    - wasm_index
  stage: test
  tags:
    - short-jobs
  extends: .cache_setup
  script:
    - mv in3_index wasm/test/in3
    - cd wasm/test
    - sh /prepare.sh
    - npm install
    - npm run test_coverage
  artifacts:
    paths:
      - wasm/test/coverage
    reports:
      junit: wasm/test/mocha.xml

# asmjs:
#   image: docker.slock.it/build-images/cmake:clang11
#   stage: bindings
#   needs: []
#   tags:
#     - short-jobs
#   script:
#     - mkdir asmjs_build
#     - cd asmjs_build
#     - emcmake cmake -DWASM=true -DASMJS=true -DWASM_EMBED=true -DTAG_VERSION=$CI_COMMIT_TAG  -DIN3API=true -DBTC_PRE_BPI34=false -DCMAKE_BUILD_TYPE=RELEASE ..
#     - make -j8
#   artifacts:
#     paths:
#       - asmjs_build/module
#       - asmjs_build/bin

# test_wasm:
#   coverage: '/Lines.*:\s+(\d+.\d+\%)/'
#   image: docker.slock.it/build-images/node:10-alpine
#   needs:
#     - wasm
#   stage: wasm
#   tags:
#     - short-jobs
#   extends: .cache_setup
#   script:
#     - mv wasm_build/module wasm/test/in3
#     - cd wasm/test
#     - sh /prepare.sh
#     - npm install
#     - npm run test_coverage
#   artifacts:
#     paths:
#       - wasm/test/coverage
#     reports:
#       junit: wasm/test/mocha.xml

# test_asmjs:
#   image: docker.slock.it/build-images/node:10-alpine
#   needs:
#     - asmjs
#   stage: wasm
#   tags:
#     - short-jobs
#   extends: .cache_setup
#   script:
#     - mv asmjs_build/module wasm/test/in3
#     - cd wasm/test
#     - sh /prepare.sh
#     - npm install
#     - npm test

# wasm-slockit-npm:
#   image: docker.slock.it/build-images/node:11-alpine
#   stage: deploy
#   tags:
#     - short-jobs
#   rules:
#     - if: '$CI_COMMIT_TAG =~ /^v[0-9]*\.[0-9]*\.[0-9]*-?.*$/'
#   needs:
#     - wasm
#   script:
#     - sh /prepare.sh
#     - cd wasm_build/module
#     - npm --no-git-tag-version --allow-same-version -f version $CI_COMMIT_TAG
#     - npm publish

# wasm-public-npm:
#   image: docker.slock.it/build-images/node:11-alpine
#   stage: deploy
#   tags:
#     - short-jobs
#   extends: .only_deploy
#   needs:
#     - wasm
#   script:
#     - sh /prepare.sh
#     - cd wasm_build/module
#     - npm --no-git-tag-version --allow-same-version -f version $CI_COMMIT_TAG
#     - npm publish --registry https://registry.npmjs.org

# asmjs-slockit-npm:
#   image: docker.slock.it/build-images/node:11-alpine
#   stage: deploy
#   tags:
#     - short-jobs
#   rules:
#     - if: '$CI_COMMIT_TAG =~ /^v[0-9]*\.[0-9]*\.[0-9]*-?.*$/'
#   needs:
#     - asmjs
#   script:
#     - sh /prepare.sh
#     - cd asmjs_build/module
#     - npm --no-git-tag-version --allow-same-version -f version $CI_COMMIT_TAG
#     - npm publish

# asmjs-public-npm:
#   image: docker.slock.it/build-images/node:11-alpine
#   stage: deploy
#   tags:
#     - short-jobs
#   extends: .only_deploy
#   needs:
#     - asmjs
#   script:
#     - sh /prepare.sh
#     - cd asmjs_build/module
#     - npm --no-git-tag-version --allow-same-version -f version $CI_COMMIT_TAG
#     - npm publish --registry https://registry.npmjs.org
