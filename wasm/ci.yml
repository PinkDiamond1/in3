# This template should be used for jobs to run during deployment only
.only_deploy:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+.[0-9]+.[0-9]+(\-RC[0-9]+)?$/'
      when: manual

.cache_setup:
  # Caches per branch - per job
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - .npm/

asmjs:
  image: docker.slock.it/build-images/cmake:clang11
  needs: []
  stage: bindings
  tags:
    - short-jobs
  script:
    - cd scripts
    - ./build_multi_wasm.sh --index
  artifacts:
    paths:
      - in3_index

test_index_asmjs:
  coverage: '/Lines.*:\s+(\d+.\d+\%)/'
  image: docker.slock.it/build-images/node:10-alpine
  needs:
    - asmjs
  stage: wasm
  tags:
    - short-jobs
  extends: .cache_setup
  script:
    - mv in3_index wasm/test/in3
    - cd wasm/test
    - sh /prepare.sh
    - npm install
    - npm test
  artifacts:
    paths:
      - wasm/test/coverage
    reports:
      junit: wasm/test/mocha.xml


wasm:
  image: docker.slock.it/build-images/cmake:clang11
  needs: []
  stage: bindings
  tags:
    - short-jobs
  script:
    - cd scripts
    - ./build_multi_wasm.sh --wasm
  artifacts:
    paths:
      - in3_wasm

test_index_wasm:
  coverage: '/Lines.*:\s+(\d+.\d+\%)/'
  image: docker.slock.it/build-images/node:10-alpine
  needs:
    - wasm
  stage: wasm
  tags:
    - short-jobs
  extends: .cache_setup
  script:
    - mv in3_wasm wasm/test/in3
    - cd wasm/test
    - sh /prepare.sh
    - npm install
    - npm run test_coverage
  artifacts:
    paths:
      - wasm/test/coverage
    reports:
      junit: wasm/test/mocha.xml


zksync_wasm:
  image: docker.slock.it/build-images/cmake:clang11
  needs: []
  stage: bindings
  tags:
    - long-jobs
  script:
    - cd scripts
    - ./build_multi_wasm.sh --zksync-wasm
  artifacts:
    paths:
      - in3_zksync-wasm


test_zksync_wasm:
  coverage: '/Lines.*:\s+(\d+.\d+\%)/'
  image: docker.slock.it/build-images/node:10-alpine
  needs:
    - zksync_wasm
  stage: wasm
  tags:
    - short-jobs
  extends: .cache_setup
  script:
    - mv in3_zksync-wasm wasm/test/in3
    - cd wasm/test
    - sh /prepare.sh
    - npm install
    - npm run test_coverage
  artifacts:
    paths:
      - wasm/test/coverage
    reports:
      junit: wasm/test/mocha.xml

zksync_asmjs:
  image: docker.slock.it/build-images/cmake:clang11
  needs: []
  stage: bindings
  tags:
    - long-jobs
  script:
    - cd scripts
    - ./build_multi_wasm.sh --zksync
  artifacts:
    paths:
      - in3_zksync


test_zksync_asmjs:
  coverage: '/Lines.*:\s+(\d+.\d+\%)/'
  image: docker.slock.it/build-images/node:10-alpine
  needs:
    - zksync_asmjs
  stage: wasm
  tags:
    - short-jobs
  extends: .cache_setup
  script:
    - mv in3_zksync wasm/test/in3
    - cd wasm/test
    - sh /prepare.sh
    - npm install
    - npm test
  artifacts:
    paths:
      - wasm/test/coverage
    reports:
      junit: wasm/test/mocha.xml

btc_wasm:
  image: docker.slock.it/build-images/cmake:clang11
  needs: []
  stage: bindings
  tags:
    - long-jobs
  script:
    - cd scripts
    - ./build_multi_wasm.sh --btc-wasm
  artifacts:
    paths:
      - in3_btc-wasm

test_btc_wasm:
  coverage: '/Lines.*:\s+(\d+.\d+\%)/'
  image: docker.slock.it/build-images/node:10-alpine
  needs:
    - btc_wasm
  stage: wasm
  tags:
    - short-jobs
  extends: .cache_setup
  script:
    - mv in3_btc-wasm wasm/test/in3
    - cd wasm/test
    - sh /prepare.sh
    - npm install
    - npm run test_coverage
  artifacts:
    paths:
      - wasm/test/coverage
    reports:
      junit: wasm/test/mocha.xml


btc_asmjs:
  image: docker.slock.it/build-images/cmake:clang11
  needs: []
  stage: bindings
  tags:
    - long-jobs
  script:
    - cd scripts
    - ./build_multi_wasm.sh --btc
  artifacts:
    paths:
      - in3_btc

test_btc_amsjs:
  coverage: '/Lines.*:\s+(\d+.\d+\%)/'
  image: docker.slock.it/build-images/node:10-alpine
  needs:
    - btc_asmjs
  stage: wasm
  tags:
    - short-jobs
  extends: .cache_setup
  script:
    - mv in3_btc wasm/test/in3
    - cd wasm/test
    - sh /prepare.sh
    - npm install
    - npm test
  artifacts:
    paths:
      - wasm/test/coverage
    reports:
      junit: wasm/test/mocha.xml


min_wasm:
  image: docker.slock.it/build-images/cmake:clang11
  needs: []
  stage: bindings
  tags:
    - long-jobs
  script:
    - cd scripts
    - ./build_multi_wasm.sh --min-wasm
  artifacts:
    paths:
      - in3_min-wasm


test_min_wasm:
  coverage: '/Lines.*:\s+(\d+.\d+\%)/'
  image: docker.slock.it/build-images/node:10-alpine
  needs:
    - min_wasm
  stage: wasm
  tags:
    - short-jobs
  extends: .cache_setup
  script:
    - mv in3_min-wasm wasm/test/in3
    - cd wasm/test
    - sh /prepare.sh
    - npm install
    - npm run test_coverage
  artifacts:
    paths:
      - wasm/test/coverage
    reports:
      junit: wasm/test/mocha.xml

min_asmjs:
  image: docker.slock.it/build-images/cmake:clang11
  needs: []
  stage: bindings
  tags:
    - long-jobs
  script:
    - cd scripts
    - ./build_multi_wasm.sh --min
  artifacts:
    paths:
      - in3_min


test_min_asmjs:
  coverage: '/Lines.*:\s+(\d+.\d+\%)/'
  image: docker.slock.it/build-images/node:10-alpine
  needs:
    - min_asmjs
  stage: wasm
  tags:
    - short-jobs
  extends: .cache_setup
  script:
    - mv in3_min wasm/test/in3
    - cd wasm/test
    - sh /prepare.sh
    - npm install
    - npm test
  artifacts:
    paths:
      - wasm/test/coverage
    reports:
      junit: wasm/test/mocha.xml


wasm-slockit-npm:
  image: docker.slock.it/build-images/node:11-alpine
  stage: deploy
  tags:
    - short-jobs
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]*\.[0-9]*\.[0-9]*-?.*$/'
  needs:
    - index_wasm
  script:
    - sh /prepare.sh
    - cd wasm_build/module
    - npm --no-git-tag-version --allow-same-version -f version $CI_COMMIT_TAG
    - npm publish

wasm-public-npm:
  image: docker.slock.it/build-images/node:11-alpine
  stage: deploy
  tags:
    - short-jobs
  extends: .only_deploy
  needs:
    - index_wasm
  script:
    - sh /prepare.sh
    - cd wasm_build/module
    - npm --no-git-tag-version --allow-same-version -f version $CI_COMMIT_TAG
    - npm publish --registry https://registry.npmjs.org

asmjs-slockit-npm:
  image: docker.slock.it/build-images/node:11-alpine
  stage: deploy
  tags:
    - short-jobs
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]*\.[0-9]*\.[0-9]*-?.*$/'
  needs:
    - index_asmjs
  script:
    - sh /prepare.sh
    - cd asmjs_build/module
    - npm --no-git-tag-version --allow-same-version -f version $CI_COMMIT_TAG
    - npm publish

asmjs-public-npm:
  image: docker.slock.it/build-images/node:11-alpine
  stage: deploy
  tags:
    - short-jobs
  extends: .only_deploy
  needs:
    - index_asmjs
  script:
    - sh /prepare.sh
    - cd asmjs_build/module
    - npm --no-git-tag-version --allow-same-version -f version $CI_COMMIT_TAG
    - npm publish --registry https://registry.npmjs.org
