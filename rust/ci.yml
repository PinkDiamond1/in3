.only_rust:
  rules:
    - changes:
        - rust/**/*
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+.[0-9]+.[0-9]+-(alpha|beta|rc)\.[0-9]+$/'
    - if: '$CI_COMMIT_REF_NAME == "master"'
    - if: '$CI_COMMIT_REF_NAME == "develop"'

.only_deploy:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+.[0-9]+.[0-9]+(\-RC[0-9]+)?$/'
      when: manual

.rust_multiarch:
  image: docker.slock.it/build-images/cmake:rust
  stage: rust
  extends: .only_rust
  tags:
    - short-jobs
  services:
    - docker:18.09-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    TARGET: ""
    BUILD_DIR: ""
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - export CROSS_DOCKER_IN_DOCKER=false
    - export RUST_BACKTRACE=1
    - export OPENSSL_DIR=/usr/lib/ssl
    - mkdir -p rust/in3-sys/in3-core/c
    - cp -r c/CMakeLists.txt c/compiler.cmake c/docs c/src c/include rust/in3-sys/in3-core/c/
    - cp CMakeLists.txt rust/in3-sys/in3-core/
    - cd rust/
    - export UPDATE_IN3_BINDINGS=1
    - cross run --example custom_transport --target $TARGET --release --jobs 8

.deploy_crate:
  stage: deploy
  #  extends: .only_deploy
  script:
    - mkdir -p rust/in3-sys/in3-core/c
    - cp -r c/CMakeLists.txt c/compiler.cmake c/docs c/src c/include rust/in3-sys/in3-core/c/
    - cp CMakeLists.txt rust/in3-sys/in3-core/
    - cd rust/
    - cargo login $CARGO_TOKEN
    - cd $PKG_DIR && cargo publish --allow-dirty
  tags:
    - mac-mini-runner
  variables:
    PKG_DIR: ""

rust_linux:
  extends: .rust_multiarch
  variables:
    TARGET: "x86_64-unknown-linux-gnu"
    BUILD_DIR: "gcc_legacy"
  needs:
    - gcc_legacy

rust_win:
  extends: .rust_multiarch
  variables:
    TARGET: "x86_64-pc-windows-gnu"
    BUILD_DIR: "win_jni"
  needs:
    - win_jni

rust_arm7:
  extends: .rust_multiarch
  variables:
    TARGET: "armv7-unknown-linux-gnueabihf"
    BUILD_DIR: "arm_jni_build"
  needs:
    - arm_jni

rust:
  stage: bindings
  script:
    - export RUST_BACKTRACE=1
    - mkdir -p rust/in3-sys/in3-core/c
    - cp -r c/CMakeLists.txt c/compiler.cmake c/docs c/src c/include rust/in3-sys/in3-core/c/
    - cp CMakeLists.txt rust/in3-sys/in3-core/
    - cd rust/
    - export UPDATE_IN3_BINDINGS=1
    - cargo run --example custom_transport --release
  needs: []
  tags:
    - mac-mini-runner

deploy_sys:
  extends: .deploy_crate
  variables:
    PKG_DIR: "in3-sys"
  needs:
    - rust

deploy_in3:
  extends: .deploy_crate
  variables:
    PKG_DIR: "in3-rs"
  needs:
    - deploy_sys
