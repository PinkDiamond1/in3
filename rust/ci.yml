.only_rust:
  rules:
    - changes:
        - rust/**/*
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+.[0-9]+.[0-9]+-(alpha|beta|rc)\.[0-9]+$/'
    - if: '$CI_COMMIT_REF_NAME == "master"'
    - if: '$CI_COMMIT_REF_NAME == "develop"'

rust:
  image: docker.slock.it/build-images/cmake:rust
  stage: bindings
  needs: []
  tags:
    - short-jobs
  script:
    - rm -rf rust/in3-sys/pre_generated
    - mkdir -p rust/in3-sys/pre_generated
    - chmod -R 0755 rust/in3-sys/pre_generated
    - mkdir -p build_rust
    - cd build_rust
    - rm -rf *
    - cmake -DCMAKE_BUILD_TYPE=MINSIZEREL -DDEV_NO_INTRN_PTR=OFF -DUSE_CURL=false ..
    - make -j8
    - cd ../rust/
    - cargo clean
    - mkdir -p ../rust/target/native
    - cp ../build_rust/lib/libin3.a target/native/libin3_x86_64-unknown-linux-gnu.a
    - export UPDATE_IN3_BINDINGS=1
    - cargo build

  artifacts:
    paths:
      - build_rust/lib
      - rust/in3-sys/pre_generated
      - rust/target

test_rust:
  image: docker.slock.it/build-images/cmake:rust
  stage: rust
  extends: .only_rust
  needs:
    - rust
  tags:
    - short-jobs
  script:
    - chmod -R 0755 rust/in3-sys/pre_generated
    - cd rust/in3-rs
    - unset UPDATE_IN3_BINDINGS
    - cargo test --lib

examples_rust:
  image: docker.slock.it/build-images/cmake:rust
  stage: rust
  extends: .only_rust
  needs:
    - rust
  tags:
    - short-jobs
  script:
    - chmod -R 0755 rust/in3-sys/pre_generated
    - cd rust/in3-rs
    - unset UPDATE_IN3_BINDINGS
    - cargo build --examples --features=blocking

# TODO: don't build cross from master once release >v0.2.0 is out
rust_multiarch:
  image: docker.slock.it/build-images/cmake:rust
  stage: rust
  extends: .only_rust
  needs:
    - win_jni
    - gcc_legacy
    - arm_jni
  tags:
    - short-jobs
  before_script:
    - apt-get update && apt-get install -y --no-install-recommends docker.io
    - wget https://github.com/rust-embedded/cross/archive/master.zip \
      && unzip master.zip &&  cd cross-master/ && cargo build \
      && cargo install --path . --force
  script:
    - cd rust/
    - cp arm_jni_build/lib/libin3.a target/native/libin3_armv7-unknown-linux-gnueabihf.a
    - cp win_jni/lib/libin3.a target/native/libin3_x86_64-pc-windows-gnu.a
    - cp gcc_legacy/lib/libin3.a target/native/libin3_x86_64-unknown-linux-gnu.a
    - unset UPDATE_IN3_BINDINGS
    - cross run --example custom_transport --target x86_64-unknown-linux-gnu --release --jobs 8
    - cross run --example custom_transport --target x86_64-pc-windows-gnu --release --jobs 8
    - cross run --example custom_transport --target armv7-unknown-linux-gnueabihf --release --jobs 8
