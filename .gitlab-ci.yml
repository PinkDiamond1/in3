stages:
  - build

build-in3:
  image: conanio/gcc8
  stage: build
  tags:
    - short-jobs
  script:
    - mkdir build
    - cd build
    - conan install .. --build libcurl
    - cmake ..
    - make
  artifacts:
    paths:
      - build

.xbuild:
  services:
    - docker:dind
  image: jonaskello/docker-and-compose:latest
  stage: build
  tags:
    - short-jobs
  artifacts:
    paths:
      - build

  script:
    - apk add --no-cache bash
    - docker run --rm "dockcross/$IMAGE" > ./dockcross
    - chmod +x ./dockcross
    - ./dockcross bash -c "$INSTALL; mkdir build; cd build; conan install .. $CONAN_OPTS && cmake .. && make && ls -ltr src/*/"
  variables:
     IMAGE: "linux-x64"
     INSTALL: "cd ."
     CONAN_OPTS: ""



.conanbuild:
  stage: build
  tags:
    - short-jobs
  script:
    - mkdir build
    - cd build
    - conan install .. --build missing
    - cmake ..
    - make
    - ls -ltr src/*/lib/ src/*/bin/ 

gcc8-armv7:
  image: conanio/gcc8-armv7
  extends: .conanbuild

  
linux-x64:
  extends: .xbuild
  variables:
     IMAGE: linux-x64


#windows-x64:
#  extends: .xbuild
#  variables:
#     IMAGE: windows-x64

#linux-armv5:
#  extends: .xbuild
#  variables:
#     IMAGE: linux-armv5

#linux-arm64:
#  extends: .xbuild
#  variables:
#     IMAGE: linux-arm64

#linux-armv6:
#  extends: .xbuild
#  variables:
#     IMAGE: linux-armv6

#linux-armv7:
#  extends: .xbuild
#  variables:
#     IMAGE: linux-armv7


#windows-x86:
#  extends: .xbuild
#  variables:
#     IMAGE: windows-x86

#manylinux-x64:
#  extends: .xbuild
#  variables:
#     IMAGE: manylinux-x64
#     CONAN_OPTS : --build libcurl
#     INSTALL: "apk add py-pip; pip install conan"
