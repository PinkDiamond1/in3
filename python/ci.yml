.only_python:
  rules:
    - changes:
        - python/**/*
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+.[0-9]+.[0-9]+-(alpha|beta|rc)\.[0-9]+$/'
    - if: '$CI_COMMIT_REF_NAME == "master"'
    - if: '$CI_COMMIT_REF_NAME == "develop"'

# This template should be used for jobs to run during deployment only
.only_deploy:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+.[0-9]+.[0-9]+(\-RC[0-9]+)?$/'
      when: manual

.cache_setup:
  cache:
    paths:
      - .cache/pip
      - venv/
  before_script:
    - pip3 install virtualenv
    - virtualenv venv
    - source venv/bin/activate

.cache_setup_with_only_python:
  extends: .only_python
  cache:
    paths:
      - .cache/pip
      - venv/
    before_script:
      - pip3 install virtualenv
      - virtualenv venv
      - source venv/bin/activate

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

python:
  image: python
  stage: bindings
  needs:
    - mac_os
    - win_jni
    - gcc8
    - arm_jni
    - gcc8-x86
  extends: .cache_setup
  tags:
    - short-jobs
  script:
    - cp mac_build/lib/libin3.dylib python/in3/libin3/shared/libin3.x64.dylib
    - cp win_jni/lib/libin3.so python/in3/libin3/shared/libin3.x64.dll
    - cp x64_build/lib/libin3.so python/in3/libin3/shared/libin3.x64.so
    - cp x86_build/lib/libin3.so python/in3/libin3/shared/libin3.x86.so
    - cp arm_jni_build/lib/libin3.so python/in3/libin3/shared/libin3.arm7.so
    - cd python
    - pip3 install -r requirements.txt
    - ./generate_docs.sh
    - rm -rf docs/_build docs/build_examples.md_
    - cd ..
    - mv python python_multilib
  artifacts:
    paths:
      - python_multilib

python_arm:
  allow_failure: true
  image: python
  extends: .cache_setup_with_only_python
  needs:
    - python
  stage: python
  script:
    - cd python_multilib
    - pip3 install -r requirements.txt
    - pytest --pylama --junitxml=report.xml
  artifacts:
    reports:
      junit: python_multilib/report.xml
  tags:
    - arm

python_win:
  extends: .cache_setup_with_only_python
  allow_failure: true
  needs:
    - python
  stage: python
  script:
    - cd python_multilib
    - pip3 install -r requirements.txt
    - pytest --pylama --junitxml=report.xml
  artifacts:
    reports:
      junit: python_multilib/report.xml
  tags:
    - windows

python_macos:
  extends: .cache_setup_with_only_python
  allow_failure: true
  needs:
    - python
  stage: python
  script:
    - cd python_multilib
    - pip3 install -r requirements.txt
    - pytest --pylama --junitxml=report.xml
  artifacts:
    reports:
      junit: python_multilib/report.xml
  tags:
    - mac-mini-runner

python_linux:
  extends: .cache_setup_with_only_python
  needs:
    - python
  image: python
  stage: python
  script:
    - cd python_multilib
    - pip3 install -r requirements.txt
    - pytest --pylama --junitxml=report.xml
  artifacts:
    reports:
      junit: python_multilib/report.xml
  tags:
    - short-jobs

release_pip:
  stage: deploy
  image: docker.slock.it/build-images/python-dev-image:latest
  tags:
    - short-jobs
  extends: .only_deploy
  needs:
    - mac_os
    - python
  script:
    - cp python_multilib/in3/libin3/shared/* python/in3/libin3/shared/
    - export version=${CI_COMMIT_TAG}
    - export download_url=https://github.com/slockit/in3-c/releases/download/${CI_COMMIT_TAG}/in3_${CI_COMMIT_TAG}_mac.tar.gz
    - sed -i "s/version = environ.*/version = \"$version\"/" python/setup.py
    - cd python
    - cp $pypirc ~/.pypirc
    - ./publish.sh
