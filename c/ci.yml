.conanbuild:
  stage: build
  tags:
    - short-jobs
  script:
    - mkdir $BUILD
    - cd $BUILD
    - cmake $CONAN_OPTS -DTAG_VERSION=$CI_COMMIT_TAG -DCMAKE_BUILD_TYPE=Release ..
    - make
  variables:
    CONAN_OPTS: ""
    BUILD: "build"
  artifacts:
    paths:
      - $BUILD/bin
      - $BUILD/lib

gcc8:
  image: docker.slock.it/build-images/cmake:gcc8
  stage: build
  tags:
    - short-jobs
  script:
    - mkdir x64_build
    - mkdir x64_jni
    - cd x64_build
    - cmake -DTAG_VERSION=$CI_COMMIT_TAG -DCMAKE_BUILD_TYPE=Release -DJAVA=true -DUSE_CURL=false ..
    - make in3_jni
    - cp lib/libin3_jni.so ../x64_jni/
    - rm -rf *
    - cmake -DTAG_VERSION=$CI_COMMIT_TAG -DCMAKE_BUILD_TYPE=Release -DJAVA=true -DBUILD_DOC=true ..
    - make
  artifacts:
    paths:
      - x64_jni
      - x64_build/bin
      - x64_build/lib
      - x64_build/c/docs/doc_doxygen
      - x64_build/java/docs/doc_doxygen

win_mingw:
  image: docker.slock.it/build-images/cmake:gcc7-mingw
  extends: .conanbuild
  variables:
    CONAN_OPTS: "-DLIBCURL_LINKTYPE=static -DJAVA=false"
    BUILD: "win_build"

win_jni:
  image: docker.slock.it/build-images/cmake:gcc7-mingw
  extends: .conanbuild
  variables:
    CONAN_OPTS: "-DUSE_CURL=false -DJAVA=true"
    BUILD: "win_jni"

arm7:
  image: docker.slock.it/build-images/cmake:gcc8-armv7
  extends: .conanbuild
  tags:
    - arm
  variables:
    CONAN_OPTS: "-DJAVA=false"
    BUILD: "arm7_build"

arm_jni:
  image: docker.slock.it/build-images/cmake:gcc8-armv7
  extends: .conanbuild
  tags:
    - arm
  variables:
    CONAN_OPTS: "-DJAVA=true -DUSE_CURL=false"
    BUILD: "arm_jni_build"

gcc8-x86:
  image: docker.slock.it/build-images/cmake:gcc8-x86
  extends: .conanbuild
  variables:
    CONAN_OPTS: "-DJAVA=true"
    BUILD: "x86_build"

gcc5:
  image: docker.slock.it/build-images/cmake:gcc5
  extends: .conanbuild

clang50:
  image: docker.slock.it/build-images/cmake:clang50
  extends: .conanbuild

clang10:
  image: docker.slock.it/build-images/cmake:clang10
  extends: .conanbuild

mac_os:
  stage: build
  script:
    - mkdir mac_build
    - mkdir mac_jni
    - cd mac_build
    - cmake -DTEST=true -DTAG_VERSION=$CI_COMMIT_TAG -DEVM_GAS=true -DCMAKE_BUILD_TYPE=Debug -DLIBCURL_TYPE=shared ..
    - make
    - ctest -V | tee ../mac_test_c.log | test/junit > ../mac_test_c.xml
    - rm -rf *
    - cmake -DTAG_VERSION=$CI_COMMIT_TAG  -DCMAKE_BUILD_TYPE=MINSIZEREL -DJAVA=true -DUSE_CURL=false -DUSE_SCRYPT=true ..
    - make in3_jni
    - cp lib/libin3_jni.dylib ../mac_jni/
    - rm -rf *
    - cmake -DTAG_VERSION=$CI_COMMIT_TAG  -DCMAKE_BUILD_TYPE=MINSIZEREL -DJAVA=true ..
    - make

  artifacts:
    reports:
      junit: mac_test_c.xml
    paths:
      - mac_jni
      - mac_build/c/docs
      - mac_build/java/docs
      - mac_build/lib
      - mac_build/bin
      - mac_test_c.xml
      - mac_test_c.log
  tags:
    - mac-mini-runner

docker:
  stage: bindings
  needs: []
  tags:
    - short-jobs
  services:
    - docker:dind
  image: docker.slock.it/build-images/deployment
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $COMMIT_IMAGE_TAG .
    - docker tag $COMMIT_IMAGE_TAG $RELEASE_IMAGE_TAG
    - docker push $RELEASE_IMAGE_TAG
    - docker push $COMMIT_IMAGE_TAG

# ##### test ######

test_c:
  image: docker.slock.it/build-images/cmake:gcc8
  stage: test
  needs: []
  tags:
    - short-jobs
  script:
    - mkdir testbuild
    - cd testbuild
    - cmake -DTEST=true -DEVM_GAS=true -DCMAKE_BUILD_TYPE=Debug ..
    - make
    - make test
  artifacts:
    paths:
      - testbuild/test
      - Testing

test_qemu:
  image: docker.io/zephyrprojectrtos/zephyr-build:v0.12
  stage: test
  needs: []
  script:
    - west init -m https://github.com/zephyrproject-rtos/zephyr --mr v2.0.0
    - export ZEPHYR_BASE=/builds/in3/c/in3-core
    - source /builds/in3/c/in3-core/zephyr/zephyr-env.sh
    - west build -b qemu_cortex_m3 c/test/qemu
    - ./scripts/qemu.sh 2> /dev/null

examples_linux:
  image: docker.slock.it/build-images/cmake:gcc8
  stage: test
  needs:
    - gcc8
  script:
    - mv x64_build build
    - cd c/examples
    - ./build.sh
    - cd ../../java/examples
    - ./build.sh
  tags:
    - short-jobs

examples_arm:
  image: docker.slock.it/build-images/cmake:gcc8-armv7
  stage: test
  needs:
    - arm7
  script:
    - mv arm7_build build
    - cd c/examples
    - ./build.sh
  tags:
    - arm

examples_macos:
  stage: test
  needs:
    - wasm
    - mac_os
  script:
    - mv mac_build build
    - cd c/examples
    - ./build.sh
    - cd ../../java/examples
    - ./build.sh
    - cd ../..
    - mv build mac_build
    - mv wasm_build build
    - cd wasm/examples
    - ./build.sh
  tags:
    - mac-mini-runner
