!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/9b28d8c/
CMAKE_C_FLAGS	main/CMakeLists.txt	/^set(CMAKE_C_FLAGS "-Og -mlongcalls")$/;"	v
COMPONENT_CONFIG_ONLY	main/component.mk	/^COMPONENT_CONFIG_ONLY := 1/;"	m
CONNECT_MAXIMUM_RETRY	main/in3_main.c	/^#define CONNECT_MAXIMUM_RETRY /;"	d	file:
ESP_IDF	main/CMakeLists.txt	/^OPTION(ESP_IDF "Esp-idf framework" OFF)$/;"	D
IN3_LIBS	main/CMakeLists.txt	/^set(IN3_LIBS $/;"	v
Incubed with ESP-IDF	README.md	/^## Incubed with ESP-IDF$/;"	s
MDNS_INSTANCE	main/in3_main.c	/^#define MDNS_INSTANCE /;"	d	file:
PROJECT_NAME	Makefile	/^PROJECT_NAME := in3-espidf$/;"	m
REST_TAG	main/in3_http.c	/^static const char *REST_TAG = "esp-rest";$/;"	v	typeref:typename:const char *	file:
TAG	main/in3_http.c	/^static const char *TAG = "IN3";$/;"	v	typeref:typename:const char *	file:
TAG	main/in3_main.c	/^static const char *TAG = "IN3";$/;"	v	typeref:typename:const char *	file:
Use case example: Airbnb Property access	README.md	/^### Use case example: Airbnb Property access$/;"	S
WIFI_CONNECTED_BIT	main/in3_main.c	/^const int WIFI_CONNECTED_BIT = BIT0;$/;"	v	typeref:typename:const int
app_main	main/in3_main.c	/^void app_main()$/;"	f	typeref:typename:void
block_number	main/in3_http.c	/^void block_number(void){$/;"	f	typeref:typename:void
block_number_res	main/block_number.h	/^const  char block_number_res[] = {$/;"	v	typeref:typename:const char[]
block_number_res_len	main/block_number.h	/^const unsigned int block_number_res_len = 4767;$/;"	v	typeref:typename:const unsigned int
c	main/in3_http.c	/^static in3_t *c;    $/;"	v	typeref:typename:in3_t *	file:
eth_call	main/in3_http.c	/^void eth_call(void)$/;"	f	typeref:typename:void
eth_call_res	main/eth_call.h	/^const char eth_call_res[] = {$/;"	v	typeref:typename:const char[]
eth_call_res_len	main/eth_call.h	/^const unsigned int eth_call_res_len = 3489;$/;"	v	typeref:typename:const unsigned int
event_handler	main/in3_main.c	/^static void event_handler(void *arg, esp_event_base_t event_base,$/;"	f	typeref:typename:void	file:
exec_get_handler	main/in3_http.c	/^static esp_err_t exec_get_handler(httpd_req_t *req)$/;"	f	typeref:typename:esp_err_t	file:
http_in3_buffer	main/in3_http.c	/^static sb_t *http_in3_buffer = NULL;$/;"	v	typeref:typename:sb_t *	file:
in3-espidf	CMakeLists.txt	/^project(in3-espidf)$/;"	p
in3_bundle	main/CMakeLists.txt	/^add_library(in3_bundle STATIC ${IN3_LIBS})$/;"	t
in3_task_blk_number	main/in3_http.c	/^void in3_task_blk_number(void *pvParameters)$/;"	f	typeref:typename:void
in3_task_evm	main/in3_http.c	/^void in3_task_evm(void *pvParameters)$/;"	f	typeref:typename:void
init_in3	main/in3_http.c	/^void init_in3(void)$/;"	f	typeref:typename:void
local_transport_func	main/in3_http.c	/^in3_ret_t local_transport_func(char** urls, int urls_len, char* payload, in3_response_t* result)/;"	f	typeref:typename:in3_ret_t
retrieve_get_handler	main/in3_http.c	/^static esp_err_t retrieve_get_handler(httpd_req_t *req)$/;"	f	typeref:typename:esp_err_t	file:
s_http_event_handler	main/in3_http.c	/^esp_err_t s_http_event_handler(esp_http_client_event_t *evt)$/;"	f	typeref:typename:esp_err_t
s_retry_num	main/in3_main.c	/^static int s_retry_num = 0;$/;"	v	typeref:typename:int	file:
s_wifi_event_group	main/in3_main.c	/^static EventGroupHandle_t s_wifi_event_group;$/;"	v	typeref:typename:EventGroupHandle_t	file:
send_request	main/in3_http.c	/^void send_request(char *url, char *payload)$/;"	f	typeref:typename:void
start_rest_server	main/in3_http.c	/^esp_err_t start_rest_server(void)$/;"	f	typeref:typename:esp_err_t
transport_esphttp	main/in3_http.c	/^static in3_ret_t transport_esphttp(in3_request_t* req)$/;"	f	typeref:typename:in3_ret_t	file:
transport_mock	main/in3_http.c	/^in3_ret_t transport_mock(in3_request_t* req) {$/;"	f	typeref:typename:in3_ret_t
wifi_init	main/in3_main.c	/^void wifi_init(void)$/;"	f	typeref:typename:void
