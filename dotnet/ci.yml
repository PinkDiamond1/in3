.only_dotnet:
  rules:
    - changes:
        - dotnet/**/*
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+.[0-9]+.[0-9]+-(alpha|beta|rc)\.[0-9]+$/'
    - if: '$CI_COMMIT_REF_NAME == "master"'
    - if: '$CI_COMMIT_REF_NAME == "develop"'

dotnet:
  image: docker.slock.it/build-images/dotnet-core-sdk:3.1
  stage: bindings
  needs:
    - mac_os
    - win_jni
    - gcc8
    - arm_jni
  tags:
    - short-jobs
  script:
    - mkdir -p dotnet/In3/runtimes/linux-x64/native
    - mkdir -p dotnet/In3/runtimes/linux-arm64/native
    - mkdir -p dotnet/In3/runtimes/osx-x64/native
    - mkdir -p dotnet/In3/runtimes/win-x64/native
    - cp mac_build/lib/libin3.dylib dotnet/In3/runtimes/osx-x64/native/libin3.dylib
    - cp x64_build/lib/libin3.so dotnet/In3/runtimes/linux-x64/native/libin3.so
    - cp win_jni/lib/libin3_jni.so dotnet/In3/runtimes/win-x64/native/libin3.dll
    - cp arm_jni_build/lib/libin3.so dotnet/In3/runtimes/linux-arm64/native/libin3.so
    - cd dotnet
    - mkdir Release
    - dotnet build -c Release
    - cp -r In3/bin/Release/* Release/
  artifacts:
    paths:
      - dotnet/Release
      - dotnet/In3/runtimes/

.dotnet_test:
  stage: dotnet
  extends: .only_dotnet
  needs:
    - dotnet
  script:
    - dotnet test --logger "junit;LogFilePath=test_results.xml" ./dotnet/
  artifacts:
    reports:
      junit: dotnet/Test/test_results.xml

dotnet_win:
  extends: .dotnet_test
  tags:
    - windows

dotnet_linux:
  extends: .dotnet_test
  image: docker.slock.it/build-images/dotnet-core-sdk:3.1
  tags:
    - short-jobs

dotnet_macos:
  extends: .dotnet_test
  tags:
    - mac-mini-runner

dotnet_arm:
  extends: .dotnet_test
  image: mcr.microsoft.com/dotnet/core/sdk:3.1
  tags:
    - arm
